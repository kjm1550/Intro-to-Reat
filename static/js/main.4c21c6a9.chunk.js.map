{"version":3,"sources":["index.js"],"names":["Square","props","className","highlight","onClick","value","Board","i","this","squares","winningLine","includes","renderSquare","React","Component","Game","state","history","Array","fill","isXNext","stepNumber","slice","length","calculateWinner","winner","setState","concat","step","status","current","winningLineIndex","line","moves","map","move","desc","key","jumpTo","xIsNext","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c21c6a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button className={props.highlight ? 'highlight square' : 'square'} onClick={props.onClick}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n\trenderSquare(i) {\r\n\t\treturn (\r\n\t\t\t<Square value={this.props.squares[i]} highlight={this.props.winningLine.includes(i)} onClick={() => this.props.onClick(i)} />\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thistory: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tisXNext: true,\r\n\t\t\tstepNumber: 0,\r\n\t\t};\r\n\t}\r\n\r\n\thandleClick(i) {\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares).winner || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.isXNext ? 'X' : 'O';\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t},\r\n\t\t\t]),\r\n\t\t\tisXNext: !this.state.isXNext,\r\n\t\t\tstepNumber: history.length,\r\n\t\t});\r\n\t}\r\n\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t\tstepNumber: step,\r\n\t\t\tisXNext: step % 2 === 0,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winner = calculateWinner(current.squares).winner;\r\n\t\tconst winningLineIndex = calculateWinner(current.squares).line;\r\n\t\tconst lines = [\r\n\t\t\t[0, 1, 2],\r\n\t\t\t[3, 4, 5],\r\n\t\t\t[6, 7, 8],\r\n\t\t\t[0, 3, 6],\r\n\t\t\t[1, 4, 7],\r\n\t\t\t[2, 5, 8],\r\n\t\t\t[0, 4, 8],\r\n\t\t\t[2, 4, 6],\r\n\t\t];\r\n\r\n\t\tconst moves = history.map((step, move) => {\r\n\t\t\tconst desc = move ? 'Go to move #' + move : 'Go to game start';\r\n\t\t\treturn (\r\n\t\t\t\t<li key={move}>\r\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tlet status;\r\n\t\tlet winningLine = [];\r\n\t\tif (winner) {\r\n\t\t\tstatus = 'Winner: ' + winner;\r\n\t\t\twinningLine = lines[winningLineIndex];\r\n\t\t} else {\r\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board squares={current.squares} winningLine={winningLine} onClick={(i) => this.handleClick(i)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn { winner: squares[a], line: i };\r\n\t\t}\r\n\t}\r\n\treturn { winner: null, line: null };\r\n}\r\n"],"sourceRoot":""}